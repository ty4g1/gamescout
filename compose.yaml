# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  backend:
    build:
      context: ./gamescout_backend
      target: final
    restart: unless-stopped
    ports:
      - 8080:8080
    environment:
      - SERVER_ADDRESS=0.0.0.0:8080
      - DATABASE_URL=postgres://postgres:mysecretpassword@db:5432/gamescoutdb
      - MICROSERVICE_URL=http://microservice:8000/vectorize
      - STEAM_SPY_PAGES=10
      - STEAM_SPY_URL_FORMAT=https://steamspy.com/api.php?request=all&page=%d
      - STEAM_SPY_DETAILS_FORMAT=https://steamspy.com/api.php?request=appdetails&appid=%d
      - STEAM_API_DETAILS_FORMAT=https://store.steampowered.com/api/appdetails?cc=us&appids=%d
    healthcheck:
      test: curl -f http://localhost:8080/health || exit 1
      interval: 5m
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      db:
        condition: service_healthy
      microservice:
        condition: service_healthy
  microservice:
    build:
      context: ./gamescout_microservice
    restart: unless-stopped
    ports:
      - 8000:8000
    healthcheck:
      test: curl -f http://localhost:8000/health || exit 1
      interval: 5m
      timeout: 10s
      retries: 5
      start_period: 30s
  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d/
    environment:
      - POSTGRES_DB=gamescoutdb
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  frontend:
    build:
      context: ./gamescout_frontend
      target: final
    restart: unless-stopped
    ports:
      - 4173:4173
    environment:
      - NODE_ENV=production
      - VITE_BASE_URL=https://violet-ads-learn.loca.lt
    depends_on:
      backend:
        condition: service_healthy
volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.


